package database;

// Generated 15/12/2012 12:13:02 AM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * BasicData generated by hbm2java
 */
@Entity
@Table(name = "BasicData", catalog = "nardi")
public class BasicData implements java.io.Serializable {

	private Integer idBasic;
	private String dataBaseName;
	private String name;
	private String field;
	private boolean editable;
	private int priority;
	private char status;
	private Set<Budget> budgetsForSpeed = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFloorType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForVoltageLighting = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFrequency = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoorSystem = new HashSet<Budget>(0);
	private Set<Budget> budgetsForHourMachine = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoorframeType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForBuildingType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForControlType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForElevatorType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForElevatorCapacitance = new HashSet<Budget>(0);
	private Set<Budget> budgetsForBoothButton = new HashSet<Budget>(0);
	private Set<Budget> budgetsForBoothDisplay = new HashSet<Budget>(0);
	private Set<Budget> budgetsForMachineType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFloorDisplay = new HashSet<Budget>(0);
	private Set<Budget> budgetsForEmbarque = new HashSet<Budget>(0);
	private Set<Budget> budgetsForElectricityType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForMirror = new HashSet<Budget>(0);
	private Set<Budget> budgetsForRailing = new HashSet<Budget>(0);
	private Set<Budget> budgetsForButtonType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForRoofType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForHeight = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDesignP26 = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDesign1357 = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFan = new HashSet<Budget>(0);
	private Set<Budget> budgetsForManeuverType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFreeAdmission = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoorType = new HashSet<Budget>(0);

	public BasicData() {
	}

	public BasicData(String dataBaseName, String name, String field,
			boolean editable, int priority, char status) {
		this.dataBaseName = dataBaseName;
		this.name = name;
		this.field = field;
		this.editable = editable;
		this.priority = priority;
		this.status = status;
	}

	public BasicData(String dataBaseName, String name, String field,
			boolean editable, int priority, char status,
			Set<Budget> budgetsForSpeed, Set<Budget> budgetsForFloorType,
			Set<Budget> budgetsForVoltageLighting,
			Set<Budget> budgetsForFrequency, Set<Budget> budgetsForDoorSystem,
			Set<Budget> budgetsForHourMachine,
			Set<Budget> budgetsForDoorframeType,
			Set<Budget> budgetsForBuildingType,
			Set<Budget> budgetsForControlType,
			Set<Budget> budgetsForElevatorType,
			Set<Budget> budgetsForElevatorCapacitance,
			Set<Budget> budgetsForBoothButton,
			Set<Budget> budgetsForBoothDisplay,
			Set<Budget> budgetsForMachineType,
			Set<Budget> budgetsForFloorDisplay, Set<Budget> budgetsForEmbarque,
			Set<Budget> budgetsForElectricityType,
			Set<Budget> budgetsForMirror, Set<Budget> budgetsForRailing,
			Set<Budget> budgetsForButtonType, Set<Budget> budgetsForRoofType,
			Set<Budget> budgetsForHeight, Set<Budget> budgetsForDesignP26,
			Set<Budget> budgetsForDesign1357, Set<Budget> budgetsForFan,
			Set<Budget> budgetsForManeuverType,
			Set<Budget> budgetsForFreeAdmission, Set<Budget> budgetsForDoorType) {
		this.dataBaseName = dataBaseName;
		this.name = name;
		this.field = field;
		this.editable = editable;
		this.priority = priority;
		this.status = status;
		this.budgetsForSpeed = budgetsForSpeed;
		this.budgetsForFloorType = budgetsForFloorType;
		this.budgetsForVoltageLighting = budgetsForVoltageLighting;
		this.budgetsForFrequency = budgetsForFrequency;
		this.budgetsForDoorSystem = budgetsForDoorSystem;
		this.budgetsForHourMachine = budgetsForHourMachine;
		this.budgetsForDoorframeType = budgetsForDoorframeType;
		this.budgetsForBuildingType = budgetsForBuildingType;
		this.budgetsForControlType = budgetsForControlType;
		this.budgetsForElevatorType = budgetsForElevatorType;
		this.budgetsForElevatorCapacitance = budgetsForElevatorCapacitance;
		this.budgetsForBoothButton = budgetsForBoothButton;
		this.budgetsForBoothDisplay = budgetsForBoothDisplay;
		this.budgetsForMachineType = budgetsForMachineType;
		this.budgetsForFloorDisplay = budgetsForFloorDisplay;
		this.budgetsForEmbarque = budgetsForEmbarque;
		this.budgetsForElectricityType = budgetsForElectricityType;
		this.budgetsForMirror = budgetsForMirror;
		this.budgetsForRailing = budgetsForRailing;
		this.budgetsForButtonType = budgetsForButtonType;
		this.budgetsForRoofType = budgetsForRoofType;
		this.budgetsForHeight = budgetsForHeight;
		this.budgetsForDesignP26 = budgetsForDesignP26;
		this.budgetsForDesign1357 = budgetsForDesign1357;
		this.budgetsForFan = budgetsForFan;
		this.budgetsForManeuverType = budgetsForManeuverType;
		this.budgetsForFreeAdmission = budgetsForFreeAdmission;
		this.budgetsForDoorType = budgetsForDoorType;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idBasic", unique = true, nullable = false)
	public Integer getIdBasic() {
		return this.idBasic;
	}

	public void setIdBasic(Integer idBasic) {
		this.idBasic = idBasic;
	}

	@Column(name = "dataBaseName", nullable = false, length = 50)
	public String getDataBaseName() {
		return this.dataBaseName;
	}

	public void setDataBaseName(String dataBaseName) {
		this.dataBaseName = dataBaseName;
	}

	@Column(name = "name", nullable = false, length = 150)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "field", nullable = false, length = 300)
	public String getField() {
		return this.field;
	}

	public void setField(String field) {
		this.field = field;
	}

	@Column(name = "editable", nullable = false)
	public boolean isEditable() {
		return this.editable;
	}

	public void setEditable(boolean editable) {
		this.editable = editable;
	}

	@Column(name = "priority", nullable = false)
	public int getPriority() {
		return this.priority;
	}

	public void setPriority(int priority) {
		this.priority = priority;
	}

	@Column(name = "status", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataBySpeed")
	public Set<Budget> getBudgetsForSpeed() {
		return this.budgetsForSpeed;
	}

	public void setBudgetsForSpeed(Set<Budget> budgetsForSpeed) {
		this.budgetsForSpeed = budgetsForSpeed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorType")
	public Set<Budget> getBudgetsForFloorType() {
		return this.budgetsForFloorType;
	}

	public void setBudgetsForFloorType(Set<Budget> budgetsForFloorType) {
		this.budgetsForFloorType = budgetsForFloorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByVoltageLighting")
	public Set<Budget> getBudgetsForVoltageLighting() {
		return this.budgetsForVoltageLighting;
	}

	public void setBudgetsForVoltageLighting(
			Set<Budget> budgetsForVoltageLighting) {
		this.budgetsForVoltageLighting = budgetsForVoltageLighting;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFrequency")
	public Set<Budget> getBudgetsForFrequency() {
		return this.budgetsForFrequency;
	}

	public void setBudgetsForFrequency(Set<Budget> budgetsForFrequency) {
		this.budgetsForFrequency = budgetsForFrequency;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorSystem")
	public Set<Budget> getBudgetsForDoorSystem() {
		return this.budgetsForDoorSystem;
	}

	public void setBudgetsForDoorSystem(Set<Budget> budgetsForDoorSystem) {
		this.budgetsForDoorSystem = budgetsForDoorSystem;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHourMachine")
	public Set<Budget> getBudgetsForHourMachine() {
		return this.budgetsForHourMachine;
	}

	public void setBudgetsForHourMachine(Set<Budget> budgetsForHourMachine) {
		this.budgetsForHourMachine = budgetsForHourMachine;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorframeType")
	public Set<Budget> getBudgetsForDoorframeType() {
		return this.budgetsForDoorframeType;
	}

	public void setBudgetsForDoorframeType(Set<Budget> budgetsForDoorframeType) {
		this.budgetsForDoorframeType = budgetsForDoorframeType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBuildingType")
	public Set<Budget> getBudgetsForBuildingType() {
		return this.budgetsForBuildingType;
	}

	public void setBudgetsForBuildingType(Set<Budget> budgetsForBuildingType) {
		this.budgetsForBuildingType = budgetsForBuildingType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByControlType")
	public Set<Budget> getBudgetsForControlType() {
		return this.budgetsForControlType;
	}

	public void setBudgetsForControlType(Set<Budget> budgetsForControlType) {
		this.budgetsForControlType = budgetsForControlType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorType")
	public Set<Budget> getBudgetsForElevatorType() {
		return this.budgetsForElevatorType;
	}

	public void setBudgetsForElevatorType(Set<Budget> budgetsForElevatorType) {
		this.budgetsForElevatorType = budgetsForElevatorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorCapacitance")
	public Set<Budget> getBudgetsForElevatorCapacitance() {
		return this.budgetsForElevatorCapacitance;
	}

	public void setBudgetsForElevatorCapacitance(
			Set<Budget> budgetsForElevatorCapacitance) {
		this.budgetsForElevatorCapacitance = budgetsForElevatorCapacitance;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBoothButton")
	public Set<Budget> getBudgetsForBoothButton() {
		return this.budgetsForBoothButton;
	}

	public void setBudgetsForBoothButton(Set<Budget> budgetsForBoothButton) {
		this.budgetsForBoothButton = budgetsForBoothButton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBoothDisplay")
	public Set<Budget> getBudgetsForBoothDisplay() {
		return this.budgetsForBoothDisplay;
	}

	public void setBudgetsForBoothDisplay(Set<Budget> budgetsForBoothDisplay) {
		this.budgetsForBoothDisplay = budgetsForBoothDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMachineType")
	public Set<Budget> getBudgetsForMachineType() {
		return this.budgetsForMachineType;
	}

	public void setBudgetsForMachineType(Set<Budget> budgetsForMachineType) {
		this.budgetsForMachineType = budgetsForMachineType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorDisplay")
	public Set<Budget> getBudgetsForFloorDisplay() {
		return this.budgetsForFloorDisplay;
	}

	public void setBudgetsForFloorDisplay(Set<Budget> budgetsForFloorDisplay) {
		this.budgetsForFloorDisplay = budgetsForFloorDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByEmbarque")
	public Set<Budget> getBudgetsForEmbarque() {
		return this.budgetsForEmbarque;
	}

	public void setBudgetsForEmbarque(Set<Budget> budgetsForEmbarque) {
		this.budgetsForEmbarque = budgetsForEmbarque;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElectricityType")
	public Set<Budget> getBudgetsForElectricityType() {
		return this.budgetsForElectricityType;
	}

	public void setBudgetsForElectricityType(
			Set<Budget> budgetsForElectricityType) {
		this.budgetsForElectricityType = budgetsForElectricityType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMirror")
	public Set<Budget> getBudgetsForMirror() {
		return this.budgetsForMirror;
	}

	public void setBudgetsForMirror(Set<Budget> budgetsForMirror) {
		this.budgetsForMirror = budgetsForMirror;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRailing")
	public Set<Budget> getBudgetsForRailing() {
		return this.budgetsForRailing;
	}

	public void setBudgetsForRailing(Set<Budget> budgetsForRailing) {
		this.budgetsForRailing = budgetsForRailing;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByButtonType")
	public Set<Budget> getBudgetsForButtonType() {
		return this.budgetsForButtonType;
	}

	public void setBudgetsForButtonType(Set<Budget> budgetsForButtonType) {
		this.budgetsForButtonType = budgetsForButtonType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRoofType")
	public Set<Budget> getBudgetsForRoofType() {
		return this.budgetsForRoofType;
	}

	public void setBudgetsForRoofType(Set<Budget> budgetsForRoofType) {
		this.budgetsForRoofType = budgetsForRoofType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHeight")
	public Set<Budget> getBudgetsForHeight() {
		return this.budgetsForHeight;
	}

	public void setBudgetsForHeight(Set<Budget> budgetsForHeight) {
		this.budgetsForHeight = budgetsForHeight;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDesignP26")
	public Set<Budget> getBudgetsForDesignP26() {
		return this.budgetsForDesignP26;
	}

	public void setBudgetsForDesignP26(Set<Budget> budgetsForDesignP26) {
		this.budgetsForDesignP26 = budgetsForDesignP26;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDesign1357")
	public Set<Budget> getBudgetsForDesign1357() {
		return this.budgetsForDesign1357;
	}

	public void setBudgetsForDesign1357(Set<Budget> budgetsForDesign1357) {
		this.budgetsForDesign1357 = budgetsForDesign1357;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFan")
	public Set<Budget> getBudgetsForFan() {
		return this.budgetsForFan;
	}

	public void setBudgetsForFan(Set<Budget> budgetsForFan) {
		this.budgetsForFan = budgetsForFan;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByManeuverType")
	public Set<Budget> getBudgetsForManeuverType() {
		return this.budgetsForManeuverType;
	}

	public void setBudgetsForManeuverType(Set<Budget> budgetsForManeuverType) {
		this.budgetsForManeuverType = budgetsForManeuverType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFreeAdmission")
	public Set<Budget> getBudgetsForFreeAdmission() {
		return this.budgetsForFreeAdmission;
	}

	public void setBudgetsForFreeAdmission(Set<Budget> budgetsForFreeAdmission) {
		this.budgetsForFreeAdmission = budgetsForFreeAdmission;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorType")
	public Set<Budget> getBudgetsForDoorType() {
		return this.budgetsForDoorType;
	}

	public void setBudgetsForDoorType(Set<Budget> budgetsForDoorType) {
		this.budgetsForDoorType = budgetsForDoorType;
	}

}
