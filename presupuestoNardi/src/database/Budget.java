package database;

// Generated 24/11/2012 10:42:56 PM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Budget generated by hbm2java
 */
@Entity
@Table(name = "budget", schema = "public")
public class Budget implements java.io.Serializable {

	private int idbudget;
	private Basicdata basicdataByButtontype;
	private Basicdata basicdataByMachinetype;
	private Basicdata basicdataByBoothdisplay;
	private Basicdata basicdataByManeuvertype;
	private Basicdata basicdataByFrequency;
	private Basicdata basicdataByMirror;
	private Basicdata basicdataByFloordisplay;
	private Basicdata basicdataByVoltagelighting;
	private Basicdata basicdataByElectricitytype;
	private Basicdata basicdataByRailing;
	private Basicdata basicdataByStatus;
	private Basicdata basicdataByDoortype;
	private Basicdata basicdataByFloortype;
	private Basicdata basicdataByBuildingtype;
	private Basicdata basicdataByDesign1357;
	private Basicdata basicdataByElevatorcapacitance;
	private Basicdata basicdataByRooftype;
	private Basicdata basicdataByFan;
	private Basicdata basicdataByHeight;
	private Basicdata basicdataBySpeed;
	private Basicdata basicdataByEmbarque;
	private Basicdata basicdataByFreeadmission;
	private Basicdata basicdataByControltype;
	private Basicdata basicdataByDesignp26;
	private Basicdata basicdataByElevatortype;
	private Basicdata basicdataByBoothbutton;
	private Basicdata basicdataByDoorsystem;
	private Basicdata basicdataByHourmachine;
	private Basicdata basicdataByDoorframetype;
	private int number;
	private Date date;
	private String partnername;
	private String construction;
	private String constructionnumber;
	private String seller;
	private String constructionaddress;
	private String constructioncity;
	private String contactphone;
	private String email;
	private String contactname;
	private Boolean planep;
	private Boolean planec;
	private boolean type;
	private Integer elevatorquantity;
	private Integer motorquantity;
	private String motortraction;
	private Integer stopnumber;
	private Integer tour;
	private Integer ontour;
	private Integer widthhole;
	private Integer fossa;
	private Integer bottomhole;
	private Boolean designspecial;
	private String designspecialcomment;
	private Integer doorofnumber;
	private String hallbutton;
	private Boolean lightcurtain;
	private Boolean loadlimiter;
	private Boolean speechsynthesizer;
	private Boolean gomsystem;
	private Boolean intercom;
	private Boolean phone;
	private Boolean accesssytem;
	private Boolean firefighterkeychain;
	private String comment;
	private String displayplacefloor;
	private Set<Hallbuttontype> hallbuttontypes = new HashSet<Hallbuttontype>(0);
	private Set<Databasicmanytomany> databasicmanytomanies = new HashSet<Databasicmanytomany>(
			0);

	public Budget() {
	}

	public Budget(int idbudget, int number, Date date, String partnername,
			String construction, String constructionnumber, String seller,
			String constructionaddress, String constructioncity,
			String contactphone, String email, String contactname, boolean type) {
		this.idbudget = idbudget;
		this.number = number;
		this.date = date;
		this.partnername = partnername;
		this.construction = construction;
		this.constructionnumber = constructionnumber;
		this.seller = seller;
		this.constructionaddress = constructionaddress;
		this.constructioncity = constructioncity;
		this.contactphone = contactphone;
		this.email = email;
		this.contactname = contactname;
		this.type = type;
	}

	public Budget(int idbudget, Basicdata basicdataByButtontype,
			Basicdata basicdataByMachinetype,
			Basicdata basicdataByBoothdisplay,
			Basicdata basicdataByManeuvertype, Basicdata basicdataByFrequency,
			Basicdata basicdataByMirror, Basicdata basicdataByFloordisplay,
			Basicdata basicdataByVoltagelighting,
			Basicdata basicdataByElectricitytype, Basicdata basicdataByRailing,
			Basicdata basicdataByStatus, Basicdata basicdataByDoortype,
			Basicdata basicdataByFloortype, Basicdata basicdataByBuildingtype,
			Basicdata basicdataByDesign1357,
			Basicdata basicdataByElevatorcapacitance,
			Basicdata basicdataByRooftype, Basicdata basicdataByFan,
			Basicdata basicdataByHeight, Basicdata basicdataBySpeed,
			Basicdata basicdataByEmbarque, Basicdata basicdataByFreeadmission,
			Basicdata basicdataByControltype, Basicdata basicdataByDesignp26,
			Basicdata basicdataByElevatortype,
			Basicdata basicdataByBoothbutton, Basicdata basicdataByDoorsystem,
			Basicdata basicdataByHourmachine,
			Basicdata basicdataByDoorframetype, int number, Date date,
			String partnername, String construction, String constructionnumber,
			String seller, String constructionaddress, String constructioncity,
			String contactphone, String email, String contactname,
			Boolean planep, Boolean planec, boolean type,
			Integer elevatorquantity, Integer motorquantity,
			String motortraction, Integer stopnumber, Integer tour,
			Integer ontour, Integer widthhole, Integer fossa,
			Integer bottomhole, Boolean designspecial,
			String designspecialcomment, Integer doorofnumber,
			String hallbutton, Boolean lightcurtain, Boolean loadlimiter,
			Boolean speechsynthesizer, Boolean gomsystem, Boolean intercom,
			Boolean phone, Boolean accesssytem, Boolean firefighterkeychain,
			String comment, String displayplacefloor,
			Set<Hallbuttontype> hallbuttontypes,
			Set<Databasicmanytomany> databasicmanytomanies) {
		this.idbudget = idbudget;
		this.basicdataByButtontype = basicdataByButtontype;
		this.basicdataByMachinetype = basicdataByMachinetype;
		this.basicdataByBoothdisplay = basicdataByBoothdisplay;
		this.basicdataByManeuvertype = basicdataByManeuvertype;
		this.basicdataByFrequency = basicdataByFrequency;
		this.basicdataByMirror = basicdataByMirror;
		this.basicdataByFloordisplay = basicdataByFloordisplay;
		this.basicdataByVoltagelighting = basicdataByVoltagelighting;
		this.basicdataByElectricitytype = basicdataByElectricitytype;
		this.basicdataByRailing = basicdataByRailing;
		this.basicdataByStatus = basicdataByStatus;
		this.basicdataByDoortype = basicdataByDoortype;
		this.basicdataByFloortype = basicdataByFloortype;
		this.basicdataByBuildingtype = basicdataByBuildingtype;
		this.basicdataByDesign1357 = basicdataByDesign1357;
		this.basicdataByElevatorcapacitance = basicdataByElevatorcapacitance;
		this.basicdataByRooftype = basicdataByRooftype;
		this.basicdataByFan = basicdataByFan;
		this.basicdataByHeight = basicdataByHeight;
		this.basicdataBySpeed = basicdataBySpeed;
		this.basicdataByEmbarque = basicdataByEmbarque;
		this.basicdataByFreeadmission = basicdataByFreeadmission;
		this.basicdataByControltype = basicdataByControltype;
		this.basicdataByDesignp26 = basicdataByDesignp26;
		this.basicdataByElevatortype = basicdataByElevatortype;
		this.basicdataByBoothbutton = basicdataByBoothbutton;
		this.basicdataByDoorsystem = basicdataByDoorsystem;
		this.basicdataByHourmachine = basicdataByHourmachine;
		this.basicdataByDoorframetype = basicdataByDoorframetype;
		this.number = number;
		this.date = date;
		this.partnername = partnername;
		this.construction = construction;
		this.constructionnumber = constructionnumber;
		this.seller = seller;
		this.constructionaddress = constructionaddress;
		this.constructioncity = constructioncity;
		this.contactphone = contactphone;
		this.email = email;
		this.contactname = contactname;
		this.planep = planep;
		this.planec = planec;
		this.type = type;
		this.elevatorquantity = elevatorquantity;
		this.motorquantity = motorquantity;
		this.motortraction = motortraction;
		this.stopnumber = stopnumber;
		this.tour = tour;
		this.ontour = ontour;
		this.widthhole = widthhole;
		this.fossa = fossa;
		this.bottomhole = bottomhole;
		this.designspecial = designspecial;
		this.designspecialcomment = designspecialcomment;
		this.doorofnumber = doorofnumber;
		this.hallbutton = hallbutton;
		this.lightcurtain = lightcurtain;
		this.loadlimiter = loadlimiter;
		this.speechsynthesizer = speechsynthesizer;
		this.gomsystem = gomsystem;
		this.intercom = intercom;
		this.phone = phone;
		this.accesssytem = accesssytem;
		this.firefighterkeychain = firefighterkeychain;
		this.comment = comment;
		this.displayplacefloor = displayplacefloor;
		this.hallbuttontypes = hallbuttontypes;
		this.databasicmanytomanies = databasicmanytomanies;
	}

	/**
	 * <b>@GeneratedValue</b> es la forma de darle a la base de datos la
	 * responsabilidad de generar los id(Cuando son autoincrementables
	 * y son clave primaria).
	 * <b>@SequenceGenerator</b> es la secuencia generada en la base
	 * de datos (En este caso postgres) que controla ese autoincremento. 
	 * @return
	 */
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO, generator="budget_seq")
	@SequenceGenerator(name="budget_seq", sequenceName="budget_idbudget_seq")
	@Column(name = "idbudget", unique = true, nullable = false)
	public int getIdbudget() {
		return this.idbudget;
	}

	public void setIdbudget(int idbudget) {
		this.idbudget = idbudget;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "buttontype")
	public Basicdata getBasicdataByButtontype() {
		return this.basicdataByButtontype;
	}

	public void setBasicdataByButtontype(Basicdata basicdataByButtontype) {
		this.basicdataByButtontype = basicdataByButtontype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "machinetype")
	public Basicdata getBasicdataByMachinetype() {
		return this.basicdataByMachinetype;
	}

	public void setBasicdataByMachinetype(Basicdata basicdataByMachinetype) {
		this.basicdataByMachinetype = basicdataByMachinetype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "boothdisplay")
	public Basicdata getBasicdataByBoothdisplay() {
		return this.basicdataByBoothdisplay;
	}

	public void setBasicdataByBoothdisplay(Basicdata basicdataByBoothdisplay) {
		this.basicdataByBoothdisplay = basicdataByBoothdisplay;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "maneuvertype")
	public Basicdata getBasicdataByManeuvertype() {
		return this.basicdataByManeuvertype;
	}

	public void setBasicdataByManeuvertype(Basicdata basicdataByManeuvertype) {
		this.basicdataByManeuvertype = basicdataByManeuvertype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "frequency")
	public Basicdata getBasicdataByFrequency() {
		return this.basicdataByFrequency;
	}

	public void setBasicdataByFrequency(Basicdata basicdataByFrequency) {
		this.basicdataByFrequency = basicdataByFrequency;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mirror")
	public Basicdata getBasicdataByMirror() {
		return this.basicdataByMirror;
	}

	public void setBasicdataByMirror(Basicdata basicdataByMirror) {
		this.basicdataByMirror = basicdataByMirror;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "floordisplay")
	public Basicdata getBasicdataByFloordisplay() {
		return this.basicdataByFloordisplay;
	}

	public void setBasicdataByFloordisplay(Basicdata basicdataByFloordisplay) {
		this.basicdataByFloordisplay = basicdataByFloordisplay;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "voltagelighting")
	public Basicdata getBasicdataByVoltagelighting() {
		return this.basicdataByVoltagelighting;
	}

	public void setBasicdataByVoltagelighting(
			Basicdata basicdataByVoltagelighting) {
		this.basicdataByVoltagelighting = basicdataByVoltagelighting;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "electricitytype")
	public Basicdata getBasicdataByElectricitytype() {
		return this.basicdataByElectricitytype;
	}

	public void setBasicdataByElectricitytype(
			Basicdata basicdataByElectricitytype) {
		this.basicdataByElectricitytype = basicdataByElectricitytype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "railing")
	public Basicdata getBasicdataByRailing() {
		return this.basicdataByRailing;
	}

	public void setBasicdataByRailing(Basicdata basicdataByRailing) {
		this.basicdataByRailing = basicdataByRailing;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status")
	public Basicdata getBasicdataByStatus() {
		return this.basicdataByStatus;
	}

	public void setBasicdataByStatus(Basicdata basicdataByStatus) {
		this.basicdataByStatus = basicdataByStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "doortype")
	public Basicdata getBasicdataByDoortype() {
		return this.basicdataByDoortype;
	}

	public void setBasicdataByDoortype(Basicdata basicdataByDoortype) {
		this.basicdataByDoortype = basicdataByDoortype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "floortype")
	public Basicdata getBasicdataByFloortype() {
		return this.basicdataByFloortype;
	}

	public void setBasicdataByFloortype(Basicdata basicdataByFloortype) {
		this.basicdataByFloortype = basicdataByFloortype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "buildingtype")
	public Basicdata getBasicdataByBuildingtype() {
		return this.basicdataByBuildingtype;
	}

	public void setBasicdataByBuildingtype(Basicdata basicdataByBuildingtype) {
		this.basicdataByBuildingtype = basicdataByBuildingtype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "design1357")
	public Basicdata getBasicdataByDesign1357() {
		return this.basicdataByDesign1357;
	}

	public void setBasicdataByDesign1357(Basicdata basicdataByDesign1357) {
		this.basicdataByDesign1357 = basicdataByDesign1357;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "elevatorcapacitance")
	public Basicdata getBasicdataByElevatorcapacitance() {
		return this.basicdataByElevatorcapacitance;
	}

	public void setBasicdataByElevatorcapacitance(
			Basicdata basicdataByElevatorcapacitance) {
		this.basicdataByElevatorcapacitance = basicdataByElevatorcapacitance;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rooftype")
	public Basicdata getBasicdataByRooftype() {
		return this.basicdataByRooftype;
	}

	public void setBasicdataByRooftype(Basicdata basicdataByRooftype) {
		this.basicdataByRooftype = basicdataByRooftype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fan")
	public Basicdata getBasicdataByFan() {
		return this.basicdataByFan;
	}

	public void setBasicdataByFan(Basicdata basicdataByFan) {
		this.basicdataByFan = basicdataByFan;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "height")
	public Basicdata getBasicdataByHeight() {
		return this.basicdataByHeight;
	}

	public void setBasicdataByHeight(Basicdata basicdataByHeight) {
		this.basicdataByHeight = basicdataByHeight;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "speed")
	public Basicdata getBasicdataBySpeed() {
		return this.basicdataBySpeed;
	}

	public void setBasicdataBySpeed(Basicdata basicdataBySpeed) {
		this.basicdataBySpeed = basicdataBySpeed;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "embarque")
	public Basicdata getBasicdataByEmbarque() {
		return this.basicdataByEmbarque;
	}

	public void setBasicdataByEmbarque(Basicdata basicdataByEmbarque) {
		this.basicdataByEmbarque = basicdataByEmbarque;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "freeadmission")
	public Basicdata getBasicdataByFreeadmission() {
		return this.basicdataByFreeadmission;
	}

	public void setBasicdataByFreeadmission(Basicdata basicdataByFreeadmission) {
		this.basicdataByFreeadmission = basicdataByFreeadmission;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "controltype")
	public Basicdata getBasicdataByControltype() {
		return this.basicdataByControltype;
	}

	public void setBasicdataByControltype(Basicdata basicdataByControltype) {
		this.basicdataByControltype = basicdataByControltype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "designp26")
	public Basicdata getBasicdataByDesignp26() {
		return this.basicdataByDesignp26;
	}

	public void setBasicdataByDesignp26(Basicdata basicdataByDesignp26) {
		this.basicdataByDesignp26 = basicdataByDesignp26;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "elevatortype")
	public Basicdata getBasicdataByElevatortype() {
		return this.basicdataByElevatortype;
	}

	public void setBasicdataByElevatortype(Basicdata basicdataByElevatortype) {
		this.basicdataByElevatortype = basicdataByElevatortype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "boothbutton")
	public Basicdata getBasicdataByBoothbutton() {
		return this.basicdataByBoothbutton;
	}

	public void setBasicdataByBoothbutton(Basicdata basicdataByBoothbutton) {
		this.basicdataByBoothbutton = basicdataByBoothbutton;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "doorsystem")
	public Basicdata getBasicdataByDoorsystem() {
		return this.basicdataByDoorsystem;
	}

	public void setBasicdataByDoorsystem(Basicdata basicdataByDoorsystem) {
		this.basicdataByDoorsystem = basicdataByDoorsystem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "hourmachine")
	public Basicdata getBasicdataByHourmachine() {
		return this.basicdataByHourmachine;
	}

	public void setBasicdataByHourmachine(Basicdata basicdataByHourmachine) {
		this.basicdataByHourmachine = basicdataByHourmachine;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "doorframetype")
	public Basicdata getBasicdataByDoorframetype() {
		return this.basicdataByDoorframetype;
	}

	public void setBasicdataByDoorframetype(Basicdata basicdataByDoorframetype) {
		this.basicdataByDoorframetype = basicdataByDoorframetype;
	}

	/**
	 * <b>@Generated</B> con generationTime.ALWAYS es la forma de 
	 * autoincrementar el campo cuando el campo no es primario,
	 * y la base de datos le ha asignado una secuencia incrementable.
	 * @return
	 */
	@Generated(GenerationTime.ALWAYS)
	@Column(name = "number", nullable = false)
	public int getNumber() {
		return this.number;
	}

	public void setNumber(int number) {
		this.number = number;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", nullable = false, length = 29)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "partnername", nullable = false, length = 100)
	public String getPartnername() {
		return this.partnername;
	}

	public void setPartnername(String partnername) {
		this.partnername = partnername;
	}

	@Column(name = "construction", nullable = false, length = 100)
	public String getConstruction() {
		return this.construction;
	}

	public void setConstruction(String construction) {
		this.construction = construction;
	}

	@Column(name = "constructionnumber", nullable = false, length = 15)
	public String getConstructionnumber() {
		return this.constructionnumber;
	}

	public void setConstructionnumber(String constructionnumber) {
		this.constructionnumber = constructionnumber;
	}

	@Column(name = "seller", nullable = false, length = 100)
	public String getSeller() {
		return this.seller;
	}

	public void setSeller(String seller) {
		this.seller = seller;
	}

	@Column(name = "constructionaddress", nullable = false, length = 200)
	public String getConstructionaddress() {
		return this.constructionaddress;
	}

	public void setConstructionaddress(String constructionaddress) {
		this.constructionaddress = constructionaddress;
	}

	@Column(name = "constructioncity", nullable = false, length = 100)
	public String getConstructioncity() {
		return this.constructioncity;
	}

	public void setConstructioncity(String constructioncity) {
		this.constructioncity = constructioncity;
	}

	@Column(name = "contactphone", nullable = false, length = 15)
	public String getContactphone() {
		return this.contactphone;
	}

	public void setContactphone(String contactphone) {
		this.contactphone = contactphone;
	}

	@Column(name = "email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "contactname", nullable = false, length = 100)
	public String getContactname() {
		return this.contactname;
	}

	public void setContactname(String contactname) {
		this.contactname = contactname;
	}

	@Column(name = "planep")
	public Boolean getPlanep() {
		return this.planep;
	}

	public void setPlanep(Boolean planep) {
		this.planep = planep;
	}

	@Column(name = "planec")
	public Boolean getPlanec() {
		return this.planec;
	}

	public void setPlanec(Boolean planec) {
		this.planec = planec;
	}

	@Column(name = "type", nullable = false)
	public boolean isType() {
		return this.type;
	}

	public void setType(boolean type) {
		this.type = type;
	}

	@Column(name = "elevatorquantity")
	public Integer getElevatorquantity() {
		return this.elevatorquantity;
	}

	public void setElevatorquantity(Integer elevatorquantity) {
		this.elevatorquantity = elevatorquantity;
	}

	@Column(name = "motorquantity")
	public Integer getMotorquantity() {
		return this.motorquantity;
	}

	public void setMotorquantity(Integer motorquantity) {
		this.motorquantity = motorquantity;
	}

	@Column(name = "motortraction", length = 10)
	public String getMotortraction() {
		return this.motortraction;
	}

	public void setMotortraction(String motortraction) {
		this.motortraction = motortraction;
	}

	@Column(name = "stopnumber")
	public Integer getStopnumber() {
		return this.stopnumber;
	}

	public void setStopnumber(Integer stopnumber) {
		this.stopnumber = stopnumber;
	}

	@Column(name = "tour")
	public Integer getTour() {
		return this.tour;
	}

	public void setTour(Integer tour) {
		this.tour = tour;
	}

	@Column(name = "ontour")
	public Integer getOntour() {
		return this.ontour;
	}

	public void setOntour(Integer ontour) {
		this.ontour = ontour;
	}

	@Column(name = "widthhole")
	public Integer getWidthhole() {
		return this.widthhole;
	}

	public void setWidthhole(Integer widthhole) {
		this.widthhole = widthhole;
	}

	@Column(name = "fossa")
	public Integer getFossa() {
		return this.fossa;
	}

	public void setFossa(Integer fossa) {
		this.fossa = fossa;
	}

	@Column(name = "bottomhole")
	public Integer getBottomhole() {
		return this.bottomhole;
	}

	public void setBottomhole(Integer bottomhole) {
		this.bottomhole = bottomhole;
	}

	@Column(name = "designspecial")
	public Boolean getDesignspecial() {
		return this.designspecial;
	}

	public void setDesignspecial(Boolean designspecial) {
		this.designspecial = designspecial;
	}

	@Column(name = "designspecialcomment", length = 300)
	public String getDesignspecialcomment() {
		return this.designspecialcomment;
	}

	public void setDesignspecialcomment(String designspecialcomment) {
		this.designspecialcomment = designspecialcomment;
	}

	@Column(name = "doorofnumber")
	public Integer getDoorofnumber() {
		return this.doorofnumber;
	}

	public void setDoorofnumber(Integer doorofnumber) {
		this.doorofnumber = doorofnumber;
	}

	@Column(name = "hallbutton", length = 100)
	public String getHallbutton() {
		return this.hallbutton;
	}

	public void setHallbutton(String hallbutton) {
		this.hallbutton = hallbutton;
	}

	@Column(name = "lightcurtain")
	public Boolean getLightcurtain() {
		return this.lightcurtain;
	}

	public void setLightcurtain(Boolean lightcurtain) {
		this.lightcurtain = lightcurtain;
	}

	@Column(name = "loadlimiter")
	public Boolean getLoadlimiter() {
		return this.loadlimiter;
	}

	public void setLoadlimiter(Boolean loadlimiter) {
		this.loadlimiter = loadlimiter;
	}

	@Column(name = "speechsynthesizer")
	public Boolean getSpeechsynthesizer() {
		return this.speechsynthesizer;
	}

	public void setSpeechsynthesizer(Boolean speechsynthesizer) {
		this.speechsynthesizer = speechsynthesizer;
	}

	@Column(name = "gomsystem")
	public Boolean getGomsystem() {
		return this.gomsystem;
	}

	public void setGomsystem(Boolean gomsystem) {
		this.gomsystem = gomsystem;
	}

	@Column(name = "intercom")
	public Boolean getIntercom() {
		return this.intercom;
	}

	public void setIntercom(Boolean intercom) {
		this.intercom = intercom;
	}

	@Column(name = "phone")
	public Boolean getPhone() {
		return this.phone;
	}

	public void setPhone(Boolean phone) {
		this.phone = phone;
	}

	@Column(name = "accesssytem")
	public Boolean getAccesssytem() {
		return this.accesssytem;
	}

	public void setAccesssytem(Boolean accesssytem) {
		this.accesssytem = accesssytem;
	}

	@Column(name = "firefighterkeychain")
	public Boolean getFirefighterkeychain() {
		return this.firefighterkeychain;
	}

	public void setFirefighterkeychain(Boolean firefighterkeychain) {
		this.firefighterkeychain = firefighterkeychain;
	}

	@Column(name = "comment", length = 300)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "displayplacefloor", length = 50)
	public String getDisplayplacefloor() {
		return this.displayplacefloor;
	}

	public void setDisplayplacefloor(String displayplacefloor) {
		this.displayplacefloor = displayplacefloor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "budget")
	public Set<Hallbuttontype> getHallbuttontypes() {
		return this.hallbuttontypes;
	}

	public void setHallbuttontypes(Set<Hallbuttontype> hallbuttontypes) {
		this.hallbuttontypes = hallbuttontypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "budget")
	public Set<Databasicmanytomany> getDatabasicmanytomanies() {
		return this.databasicmanytomanies;
	}

	public void setDatabasicmanytomanies(
			Set<Databasicmanytomany> databasicmanytomanies) {
		this.databasicmanytomanies = databasicmanytomanies;
	}

}
