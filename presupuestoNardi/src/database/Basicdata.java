package database;

// Generated 28/11/2012 02:48:07 PM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Basicdata generated by hbm2java
 */
@Entity
@Table(name = "basicdata", schema = "public")
public class Basicdata implements java.io.Serializable {

	private int idbasic;
	private String database;
	private String name;
	private String field;
	private boolean editable;
	private int priority;
	private char status;
	private Set<Budget> budgetsForVoltagelighting = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFrequency = new HashSet<Budget>(0);
	private Set<Budget> budgetsForHourmachine = new HashSet<Budget>(0);
	private Set<Budget> budgetsForMirror = new HashSet<Budget>(0);
	private Set<Budget> budgetsForRailing = new HashSet<Budget>(0);
	private Set<Budget> budgetsForButtontype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForRooftype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForHeight = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDesignp26 = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDesign1357 = new HashSet<Budget>(0);
	private Set<Budget> budgetsForManeuvertype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFreeadmission = new HashSet<Budget>(0);
	private Set<Budget> budgetsForSpeed = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFloortype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoorsystem = new HashSet<Budget>(0);
	private Set<Budget> budgetsForBuildingtype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoorframetype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForElevatortype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForControltype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForElevatorcapacitance = new HashSet<Budget>(0);
	private Set<Budget> budgetsForBoothbutton = new HashSet<Budget>(0);
	private Set<Budget> budgetsForBoothdisplay = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFloordisplay = new HashSet<Budget>(0);
	private Set<Budget> budgetsForMachinetype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForEmbarque = new HashSet<Budget>(0);
	private Set<Budget> budgetsForElectricitytype = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFan = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoortype = new HashSet<Budget>(0);

	public Basicdata() {
	}

	public Basicdata(int idbasic, String database, String name, String field,
			boolean editable, int priority, char status) {
		this.idbasic = idbasic;
		this.database = database;
		this.name = name;
		this.field = field;
		this.editable = editable;
		this.priority = priority;
		this.status = status;
	}

	public Basicdata(int idbasic, String database, String name, String field,
			boolean editable, int priority, char status,
			Set<Budget> budgetsForVoltagelighting,
			Set<Budget> budgetsForFrequency, Set<Budget> budgetsForHourmachine,
			Set<Budget> budgetsForMirror, Set<Budget> budgetsForRailing,
			Set<Budget> budgetsForButtontype, Set<Budget> budgetsForRooftype,
			Set<Budget> budgetsForHeight, Set<Budget> budgetsForDesignp26,
			Set<Budget> budgetsForDesign1357,
			Set<Budget> budgetsForManeuvertype,
			Set<Budget> budgetsForFreeadmission, Set<Budget> budgetsForSpeed,
			Set<Budget> budgetsForFloortype, Set<Budget> budgetsForDoorsystem,
			Set<Budget> budgetsForBuildingtype,
			Set<Budget> budgetsForDoorframetype,
			Set<Budget> budgetsForElevatortype,
			Set<Budget> budgetsForControltype,
			Set<Budget> budgetsForElevatorcapacitance,
			Set<Budget> budgetsForBoothbutton,
			Set<Budget> budgetsForBoothdisplay,
			Set<Budget> budgetsForFloordisplay,
			Set<Budget> budgetsForMachinetype, Set<Budget> budgetsForEmbarque,
			Set<Budget> budgetsForElectricitytype, Set<Budget> budgetsForFan,
			Set<Budget> budgetsForDoortype) {
		this.idbasic = idbasic;
		this.database = database;
		this.name = name;
		this.field = field;
		this.editable = editable;
		this.priority = priority;
		this.status = status;
		this.budgetsForVoltagelighting = budgetsForVoltagelighting;
		this.budgetsForFrequency = budgetsForFrequency;
		this.budgetsForHourmachine = budgetsForHourmachine;
		this.budgetsForMirror = budgetsForMirror;
		this.budgetsForRailing = budgetsForRailing;
		this.budgetsForButtontype = budgetsForButtontype;
		this.budgetsForRooftype = budgetsForRooftype;
		this.budgetsForHeight = budgetsForHeight;
		this.budgetsForDesignp26 = budgetsForDesignp26;
		this.budgetsForDesign1357 = budgetsForDesign1357;
		this.budgetsForManeuvertype = budgetsForManeuvertype;
		this.budgetsForFreeadmission = budgetsForFreeadmission;
		this.budgetsForSpeed = budgetsForSpeed;
		this.budgetsForFloortype = budgetsForFloortype;
		this.budgetsForDoorsystem = budgetsForDoorsystem;
		this.budgetsForBuildingtype = budgetsForBuildingtype;
		this.budgetsForDoorframetype = budgetsForDoorframetype;
		this.budgetsForElevatortype = budgetsForElevatortype;
		this.budgetsForControltype = budgetsForControltype;
		this.budgetsForElevatorcapacitance = budgetsForElevatorcapacitance;
		this.budgetsForBoothbutton = budgetsForBoothbutton;
		this.budgetsForBoothdisplay = budgetsForBoothdisplay;
		this.budgetsForFloordisplay = budgetsForFloordisplay;
		this.budgetsForMachinetype = budgetsForMachinetype;
		this.budgetsForEmbarque = budgetsForEmbarque;
		this.budgetsForElectricitytype = budgetsForElectricitytype;
		this.budgetsForFan = budgetsForFan;
		this.budgetsForDoortype = budgetsForDoortype;
	}

	@Id
	@Column(name = "idbasic", unique = true, nullable = false)
	public int getIdbasic() {
		return this.idbasic;
	}

	public void setIdbasic(int idbasic) {
		this.idbasic = idbasic;
	}

	@Column(name = "database", nullable = false, length = 50)
	public String getDatabase() {
		return this.database;
	}

	public void setDatabase(String database) {
		this.database = database;
	}

	@Column(name = "name", nullable = false, length = 150)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "field", nullable = false, length = 300)
	public String getField() {
		return this.field;
	}

	public void setField(String field) {
		this.field = field;
	}

	@Column(name = "editable", nullable = false)
	public boolean isEditable() {
		return this.editable;
	}

	public void setEditable(boolean editable) {
		this.editable = editable;
	}

	@Column(name = "priority", nullable = false)
	public int getPriority() {
		return this.priority;
	}

	public void setPriority(int priority) {
		this.priority = priority;
	}

	@Column(name = "status", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByVoltagelighting")
	public Set<Budget> getBudgetsForVoltagelighting() {
		return this.budgetsForVoltagelighting;
	}

	public void setBudgetsForVoltagelighting(
			Set<Budget> budgetsForVoltagelighting) {
		this.budgetsForVoltagelighting = budgetsForVoltagelighting;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFrequency")
	public Set<Budget> getBudgetsForFrequency() {
		return this.budgetsForFrequency;
	}

	public void setBudgetsForFrequency(Set<Budget> budgetsForFrequency) {
		this.budgetsForFrequency = budgetsForFrequency;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByHourmachine")
	public Set<Budget> getBudgetsForHourmachine() {
		return this.budgetsForHourmachine;
	}

	public void setBudgetsForHourmachine(Set<Budget> budgetsForHourmachine) {
		this.budgetsForHourmachine = budgetsForHourmachine;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByMirror")
	public Set<Budget> getBudgetsForMirror() {
		return this.budgetsForMirror;
	}

	public void setBudgetsForMirror(Set<Budget> budgetsForMirror) {
		this.budgetsForMirror = budgetsForMirror;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByRailing")
	public Set<Budget> getBudgetsForRailing() {
		return this.budgetsForRailing;
	}

	public void setBudgetsForRailing(Set<Budget> budgetsForRailing) {
		this.budgetsForRailing = budgetsForRailing;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByButtontype")
	public Set<Budget> getBudgetsForButtontype() {
		return this.budgetsForButtontype;
	}

	public void setBudgetsForButtontype(Set<Budget> budgetsForButtontype) {
		this.budgetsForButtontype = budgetsForButtontype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByRooftype")
	public Set<Budget> getBudgetsForRooftype() {
		return this.budgetsForRooftype;
	}

	public void setBudgetsForRooftype(Set<Budget> budgetsForRooftype) {
		this.budgetsForRooftype = budgetsForRooftype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByHeight")
	public Set<Budget> getBudgetsForHeight() {
		return this.budgetsForHeight;
	}

	public void setBudgetsForHeight(Set<Budget> budgetsForHeight) {
		this.budgetsForHeight = budgetsForHeight;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDesignp26")
	public Set<Budget> getBudgetsForDesignp26() {
		return this.budgetsForDesignp26;
	}

	public void setBudgetsForDesignp26(Set<Budget> budgetsForDesignp26) {
		this.budgetsForDesignp26 = budgetsForDesignp26;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDesign1357")
	public Set<Budget> getBudgetsForDesign1357() {
		return this.budgetsForDesign1357;
	}

	public void setBudgetsForDesign1357(Set<Budget> budgetsForDesign1357) {
		this.budgetsForDesign1357 = budgetsForDesign1357;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByManeuvertype")
	public Set<Budget> getBudgetsForManeuvertype() {
		return this.budgetsForManeuvertype;
	}

	public void setBudgetsForManeuvertype(Set<Budget> budgetsForManeuvertype) {
		this.budgetsForManeuvertype = budgetsForManeuvertype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFreeadmission")
	public Set<Budget> getBudgetsForFreeadmission() {
		return this.budgetsForFreeadmission;
	}

	public void setBudgetsForFreeadmission(Set<Budget> budgetsForFreeadmission) {
		this.budgetsForFreeadmission = budgetsForFreeadmission;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataBySpeed")
	public Set<Budget> getBudgetsForSpeed() {
		return this.budgetsForSpeed;
	}

	public void setBudgetsForSpeed(Set<Budget> budgetsForSpeed) {
		this.budgetsForSpeed = budgetsForSpeed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFloortype")
	public Set<Budget> getBudgetsForFloortype() {
		return this.budgetsForFloortype;
	}

	public void setBudgetsForFloortype(Set<Budget> budgetsForFloortype) {
		this.budgetsForFloortype = budgetsForFloortype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDoorsystem")
	public Set<Budget> getBudgetsForDoorsystem() {
		return this.budgetsForDoorsystem;
	}

	public void setBudgetsForDoorsystem(Set<Budget> budgetsForDoorsystem) {
		this.budgetsForDoorsystem = budgetsForDoorsystem;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByBuildingtype")
	public Set<Budget> getBudgetsForBuildingtype() {
		return this.budgetsForBuildingtype;
	}

	public void setBudgetsForBuildingtype(Set<Budget> budgetsForBuildingtype) {
		this.budgetsForBuildingtype = budgetsForBuildingtype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDoorframetype")
	public Set<Budget> getBudgetsForDoorframetype() {
		return this.budgetsForDoorframetype;
	}

	public void setBudgetsForDoorframetype(Set<Budget> budgetsForDoorframetype) {
		this.budgetsForDoorframetype = budgetsForDoorframetype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByElevatortype")
	public Set<Budget> getBudgetsForElevatortype() {
		return this.budgetsForElevatortype;
	}

	public void setBudgetsForElevatortype(Set<Budget> budgetsForElevatortype) {
		this.budgetsForElevatortype = budgetsForElevatortype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByControltype")
	public Set<Budget> getBudgetsForControltype() {
		return this.budgetsForControltype;
	}

	public void setBudgetsForControltype(Set<Budget> budgetsForControltype) {
		this.budgetsForControltype = budgetsForControltype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByElevatorcapacitance")
	public Set<Budget> getBudgetsForElevatorcapacitance() {
		return this.budgetsForElevatorcapacitance;
	}

	public void setBudgetsForElevatorcapacitance(
			Set<Budget> budgetsForElevatorcapacitance) {
		this.budgetsForElevatorcapacitance = budgetsForElevatorcapacitance;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByBoothbutton")
	public Set<Budget> getBudgetsForBoothbutton() {
		return this.budgetsForBoothbutton;
	}

	public void setBudgetsForBoothbutton(Set<Budget> budgetsForBoothbutton) {
		this.budgetsForBoothbutton = budgetsForBoothbutton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByBoothdisplay")
	public Set<Budget> getBudgetsForBoothdisplay() {
		return this.budgetsForBoothdisplay;
	}

	public void setBudgetsForBoothdisplay(Set<Budget> budgetsForBoothdisplay) {
		this.budgetsForBoothdisplay = budgetsForBoothdisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFloordisplay")
	public Set<Budget> getBudgetsForFloordisplay() {
		return this.budgetsForFloordisplay;
	}

	public void setBudgetsForFloordisplay(Set<Budget> budgetsForFloordisplay) {
		this.budgetsForFloordisplay = budgetsForFloordisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByMachinetype")
	public Set<Budget> getBudgetsForMachinetype() {
		return this.budgetsForMachinetype;
	}

	public void setBudgetsForMachinetype(Set<Budget> budgetsForMachinetype) {
		this.budgetsForMachinetype = budgetsForMachinetype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByEmbarque")
	public Set<Budget> getBudgetsForEmbarque() {
		return this.budgetsForEmbarque;
	}

	public void setBudgetsForEmbarque(Set<Budget> budgetsForEmbarque) {
		this.budgetsForEmbarque = budgetsForEmbarque;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByElectricitytype")
	public Set<Budget> getBudgetsForElectricitytype() {
		return this.budgetsForElectricitytype;
	}

	public void setBudgetsForElectricitytype(
			Set<Budget> budgetsForElectricitytype) {
		this.budgetsForElectricitytype = budgetsForElectricitytype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFan")
	public Set<Budget> getBudgetsForFan() {
		return this.budgetsForFan;
	}

	public void setBudgetsForFan(Set<Budget> budgetsForFan) {
		this.budgetsForFan = budgetsForFan;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDoortype")
	public Set<Budget> getBudgetsForDoortype() {
		return this.budgetsForDoortype;
	}

	public void setBudgetsForDoortype(Set<Budget> budgetsForDoortype) {
		this.budgetsForDoortype = budgetsForDoortype;
	}

}
