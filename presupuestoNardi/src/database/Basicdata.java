package database;

// Generated 30/10/2012 04:47:22 PM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Basicdata generated by hbm2java
 */
@Entity
@Table(name = "basicdata", schema = "public")
public class Basicdata implements java.io.Serializable {

	private int idbasic;
	private String database;
	private String name;
	private String description;
	private boolean editable;
	private char status;
	private Set budgetsForVoltagelighting = new HashSet(0);
	private Set budgetsForFrequency = new HashSet(0);
	private Set budgetsForHourmachine = new HashSet(0);
	private Set hammereds = new HashSet(0);
	private Set budgetsForMirror = new HashSet(0);
	private Set budgetsForRailing = new HashSet(0);
	private Set budgetsForButtontype = new HashSet(0);
	private Set budgetsForRooftype = new HashSet(0);
	private Set budgetsForDesignp26 = new HashSet(0);
	private Set budgetsForDesign1357 = new HashSet(0);
	private Set budgetsForManeuvertype = new HashSet(0);
	private Set budgetsForStopsequence = new HashSet(0);
	private Set budgetsForSpeed = new HashSet(0);
	private Set budgetsForFloortype = new HashSet(0);
	private Set budgetsForDoorsystem = new HashSet(0);
	private Set budgetsForBuildingtype = new HashSet(0);
	private Set budgetsForDoorframetype = new HashSet(0);
	private Set budgetsForControltype = new HashSet(0);
	private Set budgetsForElevatortype = new HashSet(0);
	private Set budgetsForBoothbutton = new HashSet(0);
	private Set budgetsForElevatorcapacitance = new HashSet(0);
	private Set budgetsForBoothdisplay = new HashSet(0);
	private Set budgetsForMotortraction = new HashSet(0);
	private Set budgetsForFloordisplay = new HashSet(0);
	private Set budgetsForMachinetype = new HashSet(0);
	private Set budgetsForEmbarque = new HashSet(0);
	private Set budgetsForElectricitytype = new HashSet(0);
	private Set budgetsForStatus = new HashSet(0);
	private Set budgetsForFan = new HashSet(0);
	private Set budgetsForDoortype = new HashSet(0);

	public Basicdata() {
	}

	public Basicdata(int idbasic, String database, String name,
			String description, boolean editable, char status) {
		this.idbasic = idbasic;
		this.database = database;
		this.name = name;
		this.description = description;
		this.editable = editable;
		this.status = status;
	}

	public Basicdata(int idbasic, String database, String name,
			String description, boolean editable, char status,
			Set budgetsForVoltagelighting, Set budgetsForFrequency,
			Set budgetsForHourmachine, Set hammereds, Set budgetsForMirror,
			Set budgetsForRailing, Set budgetsForButtontype,
			Set budgetsForRooftype, Set budgetsForDesignp26,
			Set budgetsForDesign1357, Set budgetsForManeuvertype,
			Set budgetsForStopsequence, Set budgetsForSpeed,
			Set budgetsForFloortype, Set budgetsForDoorsystem,
			Set budgetsForBuildingtype, Set budgetsForDoorframetype,
			Set budgetsForControltype, Set budgetsForElevatortype,
			Set budgetsForBoothbutton, Set budgetsForElevatorcapacitance,
			Set budgetsForBoothdisplay, Set budgetsForMotortraction,
			Set budgetsForFloordisplay, Set budgetsForMachinetype,
			Set budgetsForEmbarque, Set budgetsForElectricitytype,
			Set budgetsForStatus, Set budgetsForFan, Set budgetsForDoortype) {
		this.idbasic = idbasic;
		this.database = database;
		this.name = name;
		this.description = description;
		this.editable = editable;
		this.status = status;
		this.budgetsForVoltagelighting = budgetsForVoltagelighting;
		this.budgetsForFrequency = budgetsForFrequency;
		this.budgetsForHourmachine = budgetsForHourmachine;
		this.hammereds = hammereds;
		this.budgetsForMirror = budgetsForMirror;
		this.budgetsForRailing = budgetsForRailing;
		this.budgetsForButtontype = budgetsForButtontype;
		this.budgetsForRooftype = budgetsForRooftype;
		this.budgetsForDesignp26 = budgetsForDesignp26;
		this.budgetsForDesign1357 = budgetsForDesign1357;
		this.budgetsForManeuvertype = budgetsForManeuvertype;
		this.budgetsForStopsequence = budgetsForStopsequence;
		this.budgetsForSpeed = budgetsForSpeed;
		this.budgetsForFloortype = budgetsForFloortype;
		this.budgetsForDoorsystem = budgetsForDoorsystem;
		this.budgetsForBuildingtype = budgetsForBuildingtype;
		this.budgetsForDoorframetype = budgetsForDoorframetype;
		this.budgetsForControltype = budgetsForControltype;
		this.budgetsForElevatortype = budgetsForElevatortype;
		this.budgetsForBoothbutton = budgetsForBoothbutton;
		this.budgetsForElevatorcapacitance = budgetsForElevatorcapacitance;
		this.budgetsForBoothdisplay = budgetsForBoothdisplay;
		this.budgetsForMotortraction = budgetsForMotortraction;
		this.budgetsForFloordisplay = budgetsForFloordisplay;
		this.budgetsForMachinetype = budgetsForMachinetype;
		this.budgetsForEmbarque = budgetsForEmbarque;
		this.budgetsForElectricitytype = budgetsForElectricitytype;
		this.budgetsForStatus = budgetsForStatus;
		this.budgetsForFan = budgetsForFan;
		this.budgetsForDoortype = budgetsForDoortype;
	}

	@Id
	@Column(name = "idbasic", unique = true, nullable = false)
	public int getIdbasic() {
		return this.idbasic;
	}

	public void setIdbasic(int idbasic) {
		this.idbasic = idbasic;
	}

	@Column(name = "database", nullable = false, length = 50)
	public String getDatabase() {
		return this.database;
	}

	public void setDatabase(String database) {
		this.database = database;
	}

	@Column(name = "name", nullable = false, length = 150)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false, length = 300)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "editable", nullable = false)
	public boolean isEditable() {
		return this.editable;
	}

	public void setEditable(boolean editable) {
		this.editable = editable;
	}

	@Column(name = "status", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByVoltagelighting")
	public Set getBudgetsForVoltagelighting() {
		return this.budgetsForVoltagelighting;
	}

	public void setBudgetsForVoltagelighting(Set budgetsForVoltagelighting) {
		this.budgetsForVoltagelighting = budgetsForVoltagelighting;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFrequency")
	public Set getBudgetsForFrequency() {
		return this.budgetsForFrequency;
	}

	public void setBudgetsForFrequency(Set budgetsForFrequency) {
		this.budgetsForFrequency = budgetsForFrequency;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByHourmachine")
	public Set getBudgetsForHourmachine() {
		return this.budgetsForHourmachine;
	}

	public void setBudgetsForHourmachine(Set budgetsForHourmachine) {
		this.budgetsForHourmachine = budgetsForHourmachine;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdata")
	public Set getHammereds() {
		return this.hammereds;
	}

	public void setHammereds(Set hammereds) {
		this.hammereds = hammereds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByMirror")
	public Set getBudgetsForMirror() {
		return this.budgetsForMirror;
	}

	public void setBudgetsForMirror(Set budgetsForMirror) {
		this.budgetsForMirror = budgetsForMirror;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByRailing")
	public Set getBudgetsForRailing() {
		return this.budgetsForRailing;
	}

	public void setBudgetsForRailing(Set budgetsForRailing) {
		this.budgetsForRailing = budgetsForRailing;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByButtontype")
	public Set getBudgetsForButtontype() {
		return this.budgetsForButtontype;
	}

	public void setBudgetsForButtontype(Set budgetsForButtontype) {
		this.budgetsForButtontype = budgetsForButtontype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByRooftype")
	public Set getBudgetsForRooftype() {
		return this.budgetsForRooftype;
	}

	public void setBudgetsForRooftype(Set budgetsForRooftype) {
		this.budgetsForRooftype = budgetsForRooftype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDesignp26")
	public Set getBudgetsForDesignp26() {
		return this.budgetsForDesignp26;
	}

	public void setBudgetsForDesignp26(Set budgetsForDesignp26) {
		this.budgetsForDesignp26 = budgetsForDesignp26;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDesign1357")
	public Set getBudgetsForDesign1357() {
		return this.budgetsForDesign1357;
	}

	public void setBudgetsForDesign1357(Set budgetsForDesign1357) {
		this.budgetsForDesign1357 = budgetsForDesign1357;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByManeuvertype")
	public Set getBudgetsForManeuvertype() {
		return this.budgetsForManeuvertype;
	}

	public void setBudgetsForManeuvertype(Set budgetsForManeuvertype) {
		this.budgetsForManeuvertype = budgetsForManeuvertype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByStopsequence")
	public Set getBudgetsForStopsequence() {
		return this.budgetsForStopsequence;
	}

	public void setBudgetsForStopsequence(Set budgetsForStopsequence) {
		this.budgetsForStopsequence = budgetsForStopsequence;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataBySpeed")
	public Set getBudgetsForSpeed() {
		return this.budgetsForSpeed;
	}

	public void setBudgetsForSpeed(Set budgetsForSpeed) {
		this.budgetsForSpeed = budgetsForSpeed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFloortype")
	public Set getBudgetsForFloortype() {
		return this.budgetsForFloortype;
	}

	public void setBudgetsForFloortype(Set budgetsForFloortype) {
		this.budgetsForFloortype = budgetsForFloortype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDoorsystem")
	public Set getBudgetsForDoorsystem() {
		return this.budgetsForDoorsystem;
	}

	public void setBudgetsForDoorsystem(Set budgetsForDoorsystem) {
		this.budgetsForDoorsystem = budgetsForDoorsystem;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByBuildingtype")
	public Set getBudgetsForBuildingtype() {
		return this.budgetsForBuildingtype;
	}

	public void setBudgetsForBuildingtype(Set budgetsForBuildingtype) {
		this.budgetsForBuildingtype = budgetsForBuildingtype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDoorframetype")
	public Set getBudgetsForDoorframetype() {
		return this.budgetsForDoorframetype;
	}

	public void setBudgetsForDoorframetype(Set budgetsForDoorframetype) {
		this.budgetsForDoorframetype = budgetsForDoorframetype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByControltype")
	public Set getBudgetsForControltype() {
		return this.budgetsForControltype;
	}

	public void setBudgetsForControltype(Set budgetsForControltype) {
		this.budgetsForControltype = budgetsForControltype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByElevatortype")
	public Set getBudgetsForElevatortype() {
		return this.budgetsForElevatortype;
	}

	public void setBudgetsForElevatortype(Set budgetsForElevatortype) {
		this.budgetsForElevatortype = budgetsForElevatortype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByBoothbutton")
	public Set getBudgetsForBoothbutton() {
		return this.budgetsForBoothbutton;
	}

	public void setBudgetsForBoothbutton(Set budgetsForBoothbutton) {
		this.budgetsForBoothbutton = budgetsForBoothbutton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByElevatorcapacitance")
	public Set getBudgetsForElevatorcapacitance() {
		return this.budgetsForElevatorcapacitance;
	}

	public void setBudgetsForElevatorcapacitance(
			Set budgetsForElevatorcapacitance) {
		this.budgetsForElevatorcapacitance = budgetsForElevatorcapacitance;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByBoothdisplay")
	public Set getBudgetsForBoothdisplay() {
		return this.budgetsForBoothdisplay;
	}

	public void setBudgetsForBoothdisplay(Set budgetsForBoothdisplay) {
		this.budgetsForBoothdisplay = budgetsForBoothdisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByMotortraction")
	public Set getBudgetsForMotortraction() {
		return this.budgetsForMotortraction;
	}

	public void setBudgetsForMotortraction(Set budgetsForMotortraction) {
		this.budgetsForMotortraction = budgetsForMotortraction;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFloordisplay")
	public Set getBudgetsForFloordisplay() {
		return this.budgetsForFloordisplay;
	}

	public void setBudgetsForFloordisplay(Set budgetsForFloordisplay) {
		this.budgetsForFloordisplay = budgetsForFloordisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByMachinetype")
	public Set getBudgetsForMachinetype() {
		return this.budgetsForMachinetype;
	}

	public void setBudgetsForMachinetype(Set budgetsForMachinetype) {
		this.budgetsForMachinetype = budgetsForMachinetype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByEmbarque")
	public Set getBudgetsForEmbarque() {
		return this.budgetsForEmbarque;
	}

	public void setBudgetsForEmbarque(Set budgetsForEmbarque) {
		this.budgetsForEmbarque = budgetsForEmbarque;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByElectricitytype")
	public Set getBudgetsForElectricitytype() {
		return this.budgetsForElectricitytype;
	}

	public void setBudgetsForElectricitytype(Set budgetsForElectricitytype) {
		this.budgetsForElectricitytype = budgetsForElectricitytype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByStatus")
	public Set getBudgetsForStatus() {
		return this.budgetsForStatus;
	}

	public void setBudgetsForStatus(Set budgetsForStatus) {
		this.budgetsForStatus = budgetsForStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByFan")
	public Set getBudgetsForFan() {
		return this.budgetsForFan;
	}

	public void setBudgetsForFan(Set budgetsForFan) {
		this.budgetsForFan = budgetsForFan;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicdataByDoortype")
	public Set getBudgetsForDoortype() {
		return this.budgetsForDoortype;
	}

	public void setBudgetsForDoortype(Set budgetsForDoortype) {
		this.budgetsForDoortype = budgetsForDoortype;
	}

}
